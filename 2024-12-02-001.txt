# First, ensure you're connected to your Azure account
# If not already connected, use: Connect-AzAccount

# Get current date and time for the filename
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$csvPath = ".\AzureStorageAudit_$timestamp.csv"

# Create an empty array to store our results
$results = @()

# Get all storage accounts in the subscription
$storageAccounts = Get-AzStorageAccount

# Iterate through each storage account
foreach ($storageAccount in $storageAccounts) {
    # Get the network rules for the storage account
    $networkRules = $storageAccount.NetworkRuleSet
    
    # Create a custom object for each storage account with the required properties
    $accountInfo = [PSCustomObject]@{
        'Storage Account Name' = $storageAccount.StorageAccountName
        'Resource Group'       = $storageAccount.ResourceGroupName
        'Default Action'       = $networkRules.DefaultAction
        'Has VNet Rules'       = if ($networkRules.VirtualNetworkRules.Count -gt 0) { 'Yes' } else { 'No' }
        'Has IP Rules'         = if ($networkRules.IpRules.Count -gt 0) { 'Yes' } else { 'No' }
        'VNet Rule Count'      = $networkRules.VirtualNetworkRules.Count
        'IP Rule Count'        = $networkRules.IpRules.Count
    }
    
    # Add the storage account info to our results array
    $results += $accountInfo
}

# Output the results to both the console and a CSV file
# The Tee-Object cmdlet sends the output to both the pipeline and a file
$results | Tee-Object -FilePath $csvPath | Format-Table -AutoSize

Write-Host "`nAudit results have been saved to: $csvPath" -ForegroundColor Green