# First, ensure you're connected to your Azure account
# If not already connected, use: Connect-AzAccount

# Get current date and time for the filename
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$csvPath = ".\AzureStorageAudit_$timestamp.csv"

# Create an empty array to store our results
$results = @()

# First, let's get all storage accounts in the subscription
$storageAccounts = Get-AzStorageAccount

# Create a formatted header string for our CSV
$header = @(
    "Storage Account Name".PadRight(30),
    "Resource Group".PadRight(20),
    "Default Action".PadRight(15),
    "Has VNet Rules".PadRight(15),
    "Has IP Rules".PadRight(15),
    "VNet Rule Count".PadRight(15),
    "IP Rule Count".PadRight(15)
) -join ","

# Write the header to both console and CSV
$header | Out-File -FilePath $csvPath
Write-Host $header

# Create a separator line for visual clarity in console
$separator = "-" * ($header.Length)
Write-Host $separator

# Iterate through each storage account
foreach ($storageAccount in $storageAccounts) {
    # Get the network rules for the storage account
    $networkRules = $storageAccount.NetworkRuleSet
    
    # Format each field with consistent spacing
    $formattedLine = @(
        $storageAccount.StorageAccountName.PadRight(30),
        $storageAccount.ResourceGroupName.PadRight(20),
        $networkRules.DefaultAction.ToString().PadRight(15),
        $(if ($networkRules.VirtualNetworkRules.Count -gt 0) { "Yes" } else { "No" }).PadRight(15),
        $(if ($networkRules.IpRules.Count -gt 0) { "Yes" } else { "No" }).PadRight(15),
        $networkRules.VirtualNetworkRules.Count.ToString().PadRight(15),
        $networkRules.IpRules.Count.ToString().PadRight(15)
    ) -join ","
    
    # Write the formatted line to both console and CSV
    $formattedLine | Out-File -FilePath $csvPath -Append
    Write-Host $formattedLine
}

Write-Host "`nAudit results have been saved to: $csvPath" -ForegroundColor Green